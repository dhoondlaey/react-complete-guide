name: Deploy React App to EC2

on:
  push:
    branches: [ "deployment-testing" ]
  pull_request:
    branches: [ "deployment-testing" ]
env:
  AWS_REGION: us-east-2
  DOCKER_TAG: 0.1
  DOCKER_REGISTRY: docker.io
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
   
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
#     - name: Log Secret
#       run: echo "${{ vars.AWS_INSTANCE_USER }}"

#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v3
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#     - run: npm ci
#     - run: npm run build --if-present


#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v2
#     - name: Login to Docker Hub
#       uses: docker/login-action@v2
#       with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
         
#     - name: Build and push
#       uses: docker/build-push-action@v4
#       with:
#           push: true
#           tags: iampsjain/react-complete-guide:latest

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo " ${{ secrets.ECS_SSHKEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

#     - name: Log in to Docker and pull the latest image
#       run: |
#         ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.AWS_HOST_NAME }} \
#         "docker login --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }} && \
#         docker pull ${{ env.DOCKER_IMAGE}} && \
#         docker run ${{ env.DOCKER_IMAGE}}"
      - name: Login to Remote Host
        run: |
            eval $(ssh-agent -s)
            echo "${{ secrets.ECS_SSHKEY }}" | tr -d '\r' | ssh-add - > /dev/null
            ssh-keyscan ${{ secrets.AWS_HOST_NAME }} >> ~/.ssh/known_hosts
            ssh -i ~/.ssh/id_rsa ${{ secrets.AWS_HOST_NAME }} 'echo "hello";'

